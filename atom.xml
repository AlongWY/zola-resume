<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
	<title>Feng</title>
	<subtitle>A clean resume theme</subtitle>
	<link href="https://resume.alongwy.top/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://resume.alongwy.top"/>
	<generator uri="https://www.getzola.org/">Zola</generator>
	<updated>2021-08-28T15:00:30.183+00:00</updated>
	<id>https://resume.alongwy.top/atom.xml</id>
	<entry xml:lang="en">
		<title>gpustat: a rust-version of gpustat.</title>
		<published>2021-08-28T15:00:30.183+00:00</published>
		<updated>2021-08-28T15:00:30.183+00:00</updated>
		<link href="https://resume.alongwy.top/projects/gpustat-a-rust-version-of-gpustat/" type="text/html"/>
		<id>https://resume.alongwy.top/projects/gpustat-a-rust-version-of-gpustat/</id>
		<content type="html">&lt;h3 id=&quot;gpustat&quot;&gt;gpustat&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;gpustat&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;img.shields.io&#x2F;crates&#x2F;v&#x2F;gpustat.svg&quot; alt=&quot;Crates.io&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;resume.alongwy.top&#x2F;projects&#x2F;gpustat-a-rust-version-of-gpustat&#x2F;LICENSE&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;img.shields.io&#x2F;github&#x2F;license&#x2F;alongwy&#x2F;gpustat.svg?maxAge=86400&quot; alt=&quot;license&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A rust version of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wookayin&#x2F;gpustat&quot;&gt;gpustat&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Just &lt;em&gt;less&lt;&#x2F;em&gt; than nvidia-smi?&lt;&#x2F;p&gt;
&lt;h4 id=&quot;usage&quot;&gt;Usage&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;code&gt;$ gpustat&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Options:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--color&lt;&#x2F;code&gt;            : Force colored output (even when stdout is not a tty)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;--no-color&lt;&#x2F;code&gt;         : Suppress colored output&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;&#x2F;code&gt;, &lt;code&gt;--show-user&lt;&#x2F;code&gt;  : Display username of the process owner&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;&#x2F;code&gt;, &lt;code&gt;--show-cmd&lt;&#x2F;code&gt;   : Display the process name&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;&#x2F;code&gt;, &lt;code&gt;--show-full-cmd&lt;&#x2F;code&gt;   : Display full command and cpu stats of running process&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;&#x2F;code&gt;, &lt;code&gt;--show-pid&lt;&#x2F;code&gt;   : Display PID of the process&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;-F&lt;&#x2F;code&gt;, &lt;code&gt;--show-fan&lt;&#x2F;code&gt;   : Display GPU fan speed&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;-e&lt;&#x2F;code&gt;, &lt;code&gt;--show-codec&lt;&#x2F;code&gt; : Display encoder and&#x2F;or decoder utilization&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;-a&lt;&#x2F;code&gt;, &lt;code&gt;--show-all&lt;&#x2F;code&gt;   : Display all gpu properties above&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;quick-installation&quot;&gt;Quick Installation&lt;&#x2F;h4&gt;
&lt;p&gt;Install from Cargo:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fafafa;color:#383a42;&quot;&gt;&lt;code&gt;&lt;span&gt;cargo install gpustat
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;default-display&quot;&gt;Default display&lt;&#x2F;h4&gt;
&lt;blockquote&gt;
&lt;p&gt;[0] | A100-PCIE-40GB | 65&#x27;C | 75 % | 33409 &#x2F; 40536 MB | along(33407M)&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[0]&lt;&#x2F;code&gt;: GPUindex (starts from 0) as PCI_BUS_ID&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;A100-PCIE-40GB&lt;&#x2F;code&gt;: GPU name&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;65&#x27;C&lt;&#x2F;code&gt;: Temperature&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;75 %&lt;&#x2F;code&gt;: Utilization&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;33409 &#x2F; 40536 MB&lt;&#x2F;code&gt;: GPU Memory Usage&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;along(33407M)&lt;&#x2F;code&gt;: Username of the running processes owner on GPU (and their memory usage)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;license&quot;&gt;License&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;resume.alongwy.top&#x2F;projects&#x2F;gpustat-a-rust-version-of-gpustat&#x2F;LICENSE&quot;&gt;GPL v2 License&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Huggingface&#x2F;datasets</title>
		<published>2021-08-28T14:13:14.674+00:00</published>
		<updated>2021-08-28T14:13:14.674+00:00</updated>
		<link href="https://resume.alongwy.top/opensource/huggingface-datasets/" type="text/html"/>
		<id>https://resume.alongwy.top/opensource/huggingface-datasets/</id>
		<content type="html">&lt;p&gt;🤗 Datasets is a lightweight library providing two main features:&lt;&#x2F;p&gt;
&lt;p&gt;one-line dataloaders for many public datasets: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;one liners to download and pre-process any of the number of datasets major public datasets (in 467 languages and dialects!) provided on the HuggingFace Datasets Hub. With a simple command like &lt;code&gt;squad_dataset = load_dataset(&amp;quot;squad&amp;quot;)&lt;&#x2F;code&gt;, get any of these datasets ready to use in a dataloader for training&#x2F;evaluating a ML model (Numpy&#x2F;Pandas&#x2F;PyTorch&#x2F;TensorFlow&#x2F;JAX),&lt;&#x2F;li&gt;
&lt;li&gt;efficient data pre-processing: simple, fast and reproducible data pre-processing for the above public datasets as well as your own local datasets in CSV&#x2F;JSON&#x2F;text. With simple commands like &lt;code&gt;tokenized_dataset = dataset.map(tokenize_example)&lt;&#x2F;code&gt;, efficiently prepare the dataset for inspection and ML model evaluation and training.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>NotFeed: A RSS Reader on GitHub</title>
		<published>2021-08-28T11:40:32.885+00:00</published>
		<updated>2021-08-28T11:40:32.885+00:00</updated>
		<link href="https://resume.alongwy.top/projects/notfeed-a-rss-reader-on-github/" type="text/html"/>
		<id>https://resume.alongwy.top/projects/notfeed-a-rss-reader-on-github/</id>
		<content type="html">&lt;h3 id=&quot;notcraft-notfeed&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;notcraft.alongwy.top&#x2F;NotFeed&#x2F;&quot;&gt;NotCraft::NotFeed&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;An RSS reader running entirely from your GitHub repo.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Free hosting on &lt;a href=&quot;https:&#x2F;&#x2F;pages.github.com&#x2F;&quot;&gt;GitHub Pages&lt;&#x2F;a&gt;. No ads. No third party tracking.&lt;&#x2F;li&gt;
&lt;li&gt;No need for backend. Content updates via &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;features&#x2F;actions&quot;&gt;GitHub Actions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Customizable layouts and styles via templating and theming API. Just bring your HTML and CSS.&lt;&#x2F;li&gt;
&lt;li&gt;Free and open source. No third-party tracking.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;how-to-use-it&quot;&gt;How to use it?&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;github-pages&quot;&gt;Github Pages&lt;&#x2F;h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NotCraft&#x2F;NotFeed-Template&quot;&gt;NotFeed-Template&lt;&#x2F;a&gt; generate your own repository.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;In the repository root, open &lt;code&gt;Config.toml&lt;&#x2F;code&gt; file, click the &amp;quot;Pencil (Edit this file)&amp;quot; button to edit.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Remove &lt;code&gt;#&lt;&#x2F;code&gt; to uncommend the &lt;code&gt;cacheUrl&lt;&#x2F;code&gt; property, replace &lt;code&gt;&amp;lt;github_username&amp;gt;&lt;&#x2F;code&gt; with your GitHub username, and
replace &lt;code&gt;&amp;lt;repo&amp;gt;&lt;&#x2F;code&gt; with your GitHub repo name.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;In the sources, update the items to the sources you want to follow. The final content of the file should look similar
to this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;toml&quot; style=&quot;background-color:#fafafa;color:#383a42;&quot; class=&quot;language-toml &quot;&gt;&lt;code class=&quot;language-toml&quot; data-lang=&quot;toml&quot;&gt;&lt;span style=&quot;color:#a0a1a7;&quot;&gt;# Config.toml
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e45649;&quot;&gt;site_title &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#50a14f;&quot;&gt;&amp;quot;ArxivDaily&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e45649;&quot;&gt;cache_max_days &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c18401;&quot;&gt;7
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e45649;&quot;&gt;sources &lt;&#x2F;span&gt;&lt;span&gt;= [
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#50a14f;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;export.arxiv.org&#x2F;rss&#x2F;cs.CL&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a0a1a7;&quot;&gt;# proxy = &amp;quot;http:&#x2F;&#x2F;127.0.0.1:7890&amp;quot; ## Optional: default is None
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a0a1a7;&quot;&gt;# statics_dir   = &amp;quot;statics&amp;quot;       ## Optional: default is &amp;quot;statics&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a0a1a7;&quot;&gt;# templates_dir = &amp;quot;includes&amp;quot;      ## Optional: default is &amp;quot;includes&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a0a1a7;&quot;&gt;# cache_url = &amp;quot;https:&#x2F;&#x2F;GITHUB_USERNAME.github.io&#x2F;REPO_NAME&#x2F;cache.json&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a0a1a7;&quot;&gt;# minify = true
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a0a1a7;&quot;&gt;# [scripts]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a0a1a7;&quot;&gt;# highlight = &amp;quot;scripts&#x2F;highlight.rhai&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Scroll to the bottom of the page, click &amp;quot;Commit changes&amp;quot; button.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Once the rebuild finishes, your feed will be available at &lt;code&gt;https:&#x2F;&#x2F;&amp;lt;github_username&amp;gt;.github.io&#x2F;&amp;lt;repo&amp;gt;&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h4 id=&quot;localhost&quot;&gt;Localhost&lt;&#x2F;h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Clone the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NotCraft&#x2F;NotFeed-Template&quot;&gt;NotFeed-Template&lt;&#x2F;a&gt; repository.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Edit &lt;code&gt;Config.toml&lt;&#x2F;code&gt; file.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;notfeed&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;build: &lt;code&gt;notfeed build&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;serve: &lt;code&gt;notfeed serve --addr 127.0.0.1 --port 8080&lt;&#x2F;code&gt; or simply &lt;code&gt;notfeed serve&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h4 id=&quot;thanks&quot;&gt;Thanks&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;Inspired by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;osmoscraft&#x2F;osmosfeed&quot;&gt;osmos::feed&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Language Technology Platform</title>
		<published>2021-08-28T11:35:41.496+00:00</published>
		<updated>2021-08-28T11:35:41.496+00:00</updated>
		<link href="https://resume.alongwy.top/projects/language-technology-platform/" type="text/html"/>
		<id>https://resume.alongwy.top/projects/language-technology-platform/</id>
		<content type="html">&lt;h3 id=&quot;intro&quot;&gt;Intro&lt;&#x2F;h3&gt;
&lt;p&gt;An open-source neural language technology platform supporting six fundamental Chinese NLP tasks:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;lexical analysis (Chinese word segmentation, part-of-speech tagging, and named entity recognition)&lt;&#x2F;li&gt;
&lt;li&gt;syntactic parsing (dependency parsing)&lt;&#x2F;li&gt;
&lt;li&gt;semantic parsing (semantic dependency parsing and semantic role labeling). &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;quickstart&quot;&gt;Quickstart&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#fafafa;color:#383a42;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#a626a4;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;ltp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a626a4;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e45649;&quot;&gt;LTP
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;ltp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a626a4;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e45649;&quot;&gt;LTP&lt;&#x2F;span&gt;&lt;span&gt;()  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a0a1a7;&quot;&gt;# 默认加载 Small 模型
&lt;&#x2F;span&gt;&lt;span&gt;seg, hidden &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a626a4;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;ltp.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e45649;&quot;&gt;seg&lt;&#x2F;span&gt;&lt;span&gt;([&lt;&#x2F;span&gt;&lt;span style=&quot;color:#50a14f;&quot;&gt;&amp;quot;他叫汤姆去拿外衣。&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;])
&lt;&#x2F;span&gt;&lt;span&gt;pos &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a626a4;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;ltp.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e45649;&quot;&gt;pos&lt;&#x2F;span&gt;&lt;span&gt;(hidden)
&lt;&#x2F;span&gt;&lt;span&gt;ner &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a626a4;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;ltp.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e45649;&quot;&gt;ner&lt;&#x2F;span&gt;&lt;span&gt;(hidden)
&lt;&#x2F;span&gt;&lt;span&gt;srl &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a626a4;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;ltp.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e45649;&quot;&gt;srl&lt;&#x2F;span&gt;&lt;span&gt;(hidden)
&lt;&#x2F;span&gt;&lt;span&gt;dep &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a626a4;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;ltp.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e45649;&quot;&gt;dep&lt;&#x2F;span&gt;&lt;span&gt;(hidden)
&lt;&#x2F;span&gt;&lt;span&gt;sdp &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a626a4;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;ltp.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e45649;&quot;&gt;sdp&lt;&#x2F;span&gt;&lt;span&gt;(hidden)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;performance&quot;&gt;Performance&lt;&#x2F;h3&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;left&quot;&gt;Model&lt;&#x2F;th&gt;&lt;th align=&quot;center&quot;&gt;CWS&lt;&#x2F;th&gt;&lt;th align=&quot;center&quot;&gt;POS&lt;&#x2F;th&gt;&lt;th align=&quot;center&quot;&gt;NER&lt;&#x2F;th&gt;&lt;th align=&quot;center&quot;&gt;SRL&lt;&#x2F;th&gt;&lt;th align=&quot;center&quot;&gt;DEP&lt;&#x2F;th&gt;&lt;th align=&quot;center&quot;&gt;SDP&lt;&#x2F;th&gt;&lt;th align=&quot;center&quot;&gt;Speed(Sents&#x2F;S)&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;LTP 4.0 (Base)&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;98.70&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;98.50&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;95.4&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;80.60&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;89.50&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;75.20&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;39.12&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;LTP 4.0 (Base1)&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;99.22&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;98.73&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;96.39&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;79.28&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;89.57&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;76.57&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;--.--&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;LTP 4.0 (Base2)&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;99.18&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;98.69&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;95.97&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;79.49&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;90.19&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;76.62&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;--.--&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;LTP 4.0 (Small)&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;98.40&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;98.20&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;94.30&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;78.40&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;88.30&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;74.70&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;43.13&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;LTP 4.0 (Tiny)&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;96.80&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;97.10&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;91.60&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;70.90&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;83.80&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;70.10&lt;&#x2F;td&gt;&lt;td align=&quot;center&quot;&gt;53.22&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h3 id=&quot;cite&quot;&gt;Cite&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;latex&quot; style=&quot;background-color:#fafafa;color:#383a42;&quot; class=&quot;language-latex &quot;&gt;&lt;code class=&quot;language-latex&quot; data-lang=&quot;latex&quot;&gt;&lt;span&gt;@article{che2020n,
&lt;&#x2F;span&gt;&lt;span&gt;  title={N-LTP: A Open-source Neural Chinese Language Technology Platform with Pretrained Models},
&lt;&#x2F;span&gt;&lt;span&gt;  author={Che, Wanxiang and Feng, Yunlong and Qin, Libo and Liu, Ting},
&lt;&#x2F;span&gt;&lt;span&gt;  journal={arXiv preprint arXiv:2009.11616},
&lt;&#x2F;span&gt;&lt;span&gt;  year={2020}
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>N-LTP: A Open-source Neural Chinese Language Technology Platform with Pretrained Models</title>
		<published>2021-08-28T11:00:37.434+00:00</published>
		<updated>2021-08-28T11:00:37.434+00:00</updated>
		<link href="https://resume.alongwy.top/publications/n-ltp-a-open-source-neural-chinese-language-technology-platform-with-pretrained-models/" type="text/html"/>
		<id>https://resume.alongwy.top/publications/n-ltp-a-open-source-neural-chinese-language-technology-platform-with-pretrained-models/</id>
		<content type="html">&lt;p&gt;An open-source neural language technology platform supporting six fundamental Chinese NLP tasks: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;lexical analysis (Chinese word segmentation, part-of-speech tagging, and named entity recognition)&lt;&#x2F;li&gt;
&lt;li&gt;syntactic parsing (dependency parsing)&lt;&#x2F;li&gt;
&lt;li&gt;semantic parsing (semantic dependency parsing and semantic role labeling). &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Unlike the existing state-of-the-art toolkits, such as Stanza, that adopt an independent model for each task, N-LTP adopts the multi-task framework by using a shared pre-trained model, which has the advantage of capturing the shared knowledge across relevant Chinese tasks. &lt;&#x2F;p&gt;
&lt;p&gt;In addition, knowledge distillation where the single-task model teaches the multi-task model is further introduced to encourage the multi-task model to surpass its single-task teacher.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, we provide a collection of easy-to-use APIs and a visualization tool to make users easier to use and view the processing results directly. To the best of our knowledge, this is the first toolkit to support six Chinese NLP fundamental tasks. &lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>HIT-SCIR at MRP 2020: Transition-based Parser and Iterative Inference Parser</title>
		<published>2020-09-01T11:00:06.142+00:00</published>
		<updated>2020-09-01T11:00:06.142+00:00</updated>
		<link href="https://resume.alongwy.top/publications/hit-scir-at-mrp-2020-transition-based-parser-and-iterative-inference-parser/" type="text/html"/>
		<id>https://resume.alongwy.top/publications/hit-scir-at-mrp-2020-transition-based-parser-and-iterative-inference-parser/</id>
		<content type="html">&lt;p&gt;This paper describes our submission system (HIT-SCIR) for the CoNLL 2020 shared task: Cross-Framework and Cross-Lingual Meaning Representation Parsing. &lt;&#x2F;p&gt;
&lt;p&gt;The task includes five frameworks for graph-based meaning representations, i.e., UCCA, EDS, PTG, AMR, and DRG. &lt;&#x2F;p&gt;
&lt;p&gt;Our solution consists of two sub-systems: 
+ transition-based parser for Flavor (1) frameworks (UCCA, EDS, PTG)
+ iterative inference parser for Flavor (2) frameworks (DRG, AMR). &lt;&#x2F;p&gt;
&lt;p&gt;In the final evaluation, our system is ranked 3rd among the seven team both in Cross-Framework Track and Cross-Lingual Track, with the macro-averaged MRP F1 score of 0.81&#x2F;0.69.&lt;&#x2F;p&gt;
</content>
	</entry>
</feed>
